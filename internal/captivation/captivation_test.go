package captivation

import (
	"log"
	"testing"
)

// using https://www.rapidtables.com/convert/number/ascii-to-binary.html to write test cases

// TestLessThan100AfterPreamble tests what happens when there's less than 100 characters after the start of the message
func TestLessThan100AfterPreamble(t *testing.T) {
	//CAPTIVATIONblahblahblahblahb
	input
	log.Printf("%+v", input)
}

// TestBasicInputMessage tests the basic case of CAPTIVATION followed by 100 characters
func TestBasicInputMessage(t *testing.T) {
	//CAPTIVATIONblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblah
	input
	log.Printf("%+v", input)
}

// TestBasicInputMessageWithExtraTrailingCharacters tests the basic case of CAPTIVATION followed by 100 characters followed by extra characters that ought not be printed
func TestBasicInputMessageWithExtraTrailingCharacters(t *testing.T) {
	//CAPTIVATIONblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahNONONONONO
	input
	log.Printf("%+v", input)
}

// TestBasicInputWithMultipleMessages tests the basic case of CAPTIVATION followed by 100 characters followed by padding, then another CAPTIVATION message
func TestBasicInputWithMultipleMessages(t *testing.T) {
	//CAPTIVATIONblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahNONONONONO
	input
	log.Printf("%+v", input)
}

// TestMisalignedInputMessage tests the case where there's 5 padding bits then a valid message
func TestMisalignedInputMessage(t *testing.T) {
	//(pad5=01010)CAPTIVATIONblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahNONONO
	input
	log.Printf("%+v", input)
}

// TestNestedSignals tests what happens when the preamble CAPTIVATION appears twice within the message itself
func TestNestedMessages(t *testing.T) {
	//CAPTIVATIONblahCAPTIVATIONblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahmsg2NONONONONO
	input
	log.Printf("%+v", input)
}

// TestPartialPreambleInput tests the case where most of captivation appears but not all
func TestPartialPreambleInput(t *testing.T) {
	//CAPTIVTIONblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblahblah
	input := "0100001101000001010100000101010001001001010101100101010001001001010011110100111001100010011011000110000101101000011000100110110001100001011010000110001001101100011000010110100001100010011011000110000101101000011000100110110001100001011010000110001001101100011000010110100001100010011011000110000101101000011000100110110001100001011010000110001001101100011000010110100001100010011011000110000101101000011000100110110001100001011010000110001001101100011000010110100001100010011011000110000101101000011000100110110001100001011010000110001001101100011000010110100001100010011011000110000101101000011000100110110001100001011010000110001001101100011000010110100001100010011011000110000101101000011000100110110001100001011010000110001001101100011000010110100001100010011011000110000101101000011000100110110001100001011010000110001001101100011000010110100001100010011011000110000101101000"

	log.Printf("%+v", input)
}

//Tests for waiting between characters, i.e.
// test where input is CAPTIVATION(50 chars) WAIT 5 seconds (50 chars)
// test where input is CAPTIVATION(50 chars + 4 bits of 51st char) WAIT 5 seconds (last 4 bits of 51st char and 49 chars)
